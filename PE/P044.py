# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
# The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
# However, their difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk,
# for which their sum and difference are pentagonal and
# D = |Pk − Pj| is minimised; what is the value of D?

import math

#pentagonal function
def P(n):
    return n*(3*n-1)//2

def main():
    #array to hold pentagonal numbers, up to 100 terms ish
    ps = []
    for i in range(1,10001):
        ps+=[P(i)]

    #vars, one for top, one for bottom
    Pk = 1
    Pj = 1

    #variable to keep the lowest value of D. start high, work down
    lowest = 1000000000000

    #for loop to run through pentagonal numbers
    for i in range(1,len(ps)):
        #Pk is always larger than Pj
        Pk = ps[i]

        #loop up to Pk
        for j in range(i):
            Pj = ps[j]
            sum = Pk + Pj
            difference = Pk - Pj
            #multiple checks to see if it passes the test
            if(sum in ps):
                print(Pk)
                if(difference in ps):
                    print(Pj)
                    if(lowest > difference):
                        lowest = difference
                        print("\t",lowest)
                        return

    print(lowest)

if __name__ == '__main__':
    main()
